{"version":3,"sources":["components/Header.js","components/Home.js","components/PhoneBook.js","components/todolist/TodoTemplate.js","components/todolist/TodoProvider.js","components/todolist/TodoHead.js","components/todolist/TodoItem.js","components/todolist/TodoList.js","components/todolist/TodoCreate.js","components/PostWrapper.js","components/PostContainer.js","components/InputSample.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Home","style","width","maxWidth","height","src","PhoneBook","useState","name","phone","TextInput","setTextInput","id","bookmark","Users","setUsers","onChange","e","target","value","nextInput","useRef","nextId","console","log","BoxChecked","setBoxChecked","Form","Group","Label","Control","ref","placeholder","controlId","Check","type","label","checked","Button","variant","onClick","check","user","current","focus","alert","onCreate","Table","striped","bordered","hover","map","index","color","size","filter","TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","text","done","todoReducer","state","action","concat","todo","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","Provider","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","React","memo","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","setOpen","setValue","useTodoNextId","onSubmit","preventDefault","autoFocus","PostWrapper","Nav","Item","Link","as","to","eventKey","exact","path","PostContainer","InputSample","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2da182e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return(\r\n        <h1 className=\"head-title pt-3 pb-3\"><b>일 해야지?</b></h1>\r\n    );\r\n}\r\n\r\nexport default Header;","/* eslint-disable */\r\nimport React from 'react'\r\n\r\nfunction Home() {\r\n    const style = {\r\n        width: \"inherit\",\r\n        maxWidth: \"100%\",\r\n        height: \"auto\",\r\n    }\r\n    return (\r\n        <div className=\"mt-3\">\r\n        <img style={style} src=\"https://cdn.eyesmag.com/content/uploads/posts/2020/02/25/sundayryan_ep_01_thum-ea017180-076d-4970-b012-229cd996ea8a.jpg\"></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Form, Button, Table } from 'react-bootstrap'\r\nimport { useState, useRef } from 'react'\r\nfunction PhoneBook() {\r\n\r\n    const [TextInput, setTextInput] = useState(\r\n        {\r\n            name: '',\r\n            phone: '',\r\n        }\r\n    )\r\n    const { name, phone } = TextInput;\r\n\r\n    const [Users, setUsers] = useState(\r\n        [{\r\n            id: 1,\r\n            name: '홍길동',\r\n            phone: '010-1111-2222',\r\n            bookmark: false\r\n        },\r\n        {\r\n            id: 2,\r\n            name: '전우치',\r\n            phone: '010-3333-4444',\r\n            bookmark: false,\r\n        }]\r\n    );\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setTextInput({\r\n            ...TextInput,\r\n            [name]: value\r\n        })\r\n    }\r\n   \r\n    const nextInput = useRef();\r\n    const nextId = useRef(3);\r\n    console.log(nextId);\r\n    const onCreate = (check) => {\r\n        const user = {\r\n            id: nextId.current,\r\n            name: name,\r\n            phone: phone,\r\n            bookmark: check ? true : false,\r\n        }\r\n        if (user.name === '' || user.phone === '') {\r\n            alert('이름, 핸드폰 번호를 입력해주세요.')\r\n            return;\r\n        } else {\r\n            setUsers(\r\n                [...Users, user]\r\n            )\r\n        }\r\n        setTextInput({\r\n            name: '',\r\n            phone: '',\r\n        })\r\n        nextId.current += 1;\r\n        nextInput.current.focus();\r\n    }\r\n    const onRemove = (id) => {\r\n        setUsers(\r\n            Users.filter((user) => { return user.id !== id }\r\n            )\r\n        );\r\n    }\r\n    const onBookmark = (id) => {\r\n        setUsers(\r\n            Users.map((user, index) => {\r\n                return user.id === id ? { ...user, bookmark: !user.bookmark } : user\r\n            })\r\n        )\r\n    }\r\n    const [BoxChecked, setBoxChecked] = useState(false);\r\n    const checkBoxChange = (e) => {\r\n        if (e.target.checked === true) {\r\n            setBoxChecked(true);\r\n        } else {\r\n            setBoxChecked(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"PhoneBook-border bg-white pb-3 ps-1 pe-1\">\r\n            <Form className=\"mt-2 pt-3 pb-5 ps-3 pe-3\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>이름</Form.Label>\r\n                    <Form.Control ref={nextInput} placeholder=\"Enter name\" name=\"name\" value={name}\r\n                        onChange={onChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>핸드폰 번호</Form.Label>\r\n                    <Form.Control placeholder=\"Enter phone number\" name=\"phone\" value={phone}\r\n                        onChange={onChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"즐겨찾기\" onChange={checkBoxChange} />\r\n\r\n                </Form.Group>\r\n                <Button variant=\"dark\" onClick={() => { onCreate(BoxChecked) }}>등록</Button>\r\n            </Form>\r\n\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>이름</th>\r\n                        <th>핸드폰 번호</th>\r\n                        <th>즐겨찾기</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {Users.map((user, index) => {\r\n                    return (\r\n                        <tbody key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><b style={{\r\n                                    color: user.bookmark ? 'blue' : 'black'\r\n                                }}>{user.name}</b></td>\r\n                                <td>{user.phone}</td>\r\n                                <td style={{ width: \"100px\" }}>\r\n                                    <Button variant=\"outline-dark\" size=\"sm\" onClick={() => { onBookmark(user.id) }}>\r\n                                        {user.bookmark ? '해제' : '등록'}\r\n                                    </Button>\r\n                                </td>\r\n                                <td style={{ width: \"70px\" }}>\r\n                                    <Button variant=\"outline-danger\" size=\"sm\" onClick={() => { onRemove(user.id) }}>삭제</Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    );\r\n                })}\r\n\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PhoneBook;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width:inherit;\r\n    height:800px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 10px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n    return <TodoTemplateBlock> { children } </TodoTemplateBlock>\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: '학원 강의 듣기',\r\n    done: true\r\n  },\r\n  {\r\n    id: 2,\r\n    text: '리액트 공부하기',\r\n    done: true\r\n  },\r\n  {\r\n    id: 3,\r\n    text: '점심 먹기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 4,\r\n    text: '드라마 보기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 5,\r\n    text: '저녁 먹기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 6,\r\n    text: '프로젝트 하나 만들기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 7,\r\n    text: '핸드폰 보면서 자기',\r\n    done: false\r\n  }\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.todo);\r\n    case 'TOGGLE':\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter(todo => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(5);\r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = useContext(TodoStateContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  const context = useContext(TodoDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  const context = useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTodoState } from './TodoProvider';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding-top: 48px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n    }\r\n    .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n    }\r\n`;\r\n\r\nfunction TodoHead() {\r\n  const todos = useTodoState();\r\n  const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n  const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default TodoHead;","/*eslint-disable*/\r\n\r\nimport React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport {MdDone, MdDeleteForever} from 'react-icons/md'\r\nimport { useTodoDispatch } from './TodoProvider';\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nfunction TodoItem({ id, done, text }) {\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemove}>\r\n        <MdDeleteForever />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoItem);","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TodoItem from './TodoItem';\r\nimport { useTodoState } from './TodoProvider';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48;\r\n    overflow-y:auto;\r\n`;\r\n\r\nfunction TodoList() {\r\n    const todos = useTodoState();\r\n  \r\n    return (\r\n      <TodoListBlock>\r\n        {todos.map(todo => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            id={todo.id}\r\n            text={todo.text}\r\n            done={todo.done}\r\n          />\r\n        ))}\r\n      </TodoListBlock>\r\n    );\r\n  }\r\n  \r\n  export default TodoList;","import React, { useState } from 'react'\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from './TodoProvider'\r\n\r\n\r\nconst CircleButton = styled.button`\r\n    background: #38d9a9;\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display:block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    transition: 0.125s all ease-in;\r\n    ${props =>\r\n        props.open &&\r\n        css`\r\n        background: #ff6b6b;\r\n        &:hover {\r\n          background: #ff8787;\r\n        }\r\n        &:active {\r\n          background: #fa5252;\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n      `}\r\n  `;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n  `;\r\n\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n  \r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n  `;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n  `;\r\n\r\n  function TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n  \r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n  \r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n      e.preventDefault(); // 새로고침 방지\r\n      dispatch({\r\n        type: 'CREATE',\r\n        todo: {\r\n          id: nextId.current,\r\n          text: value,\r\n          done: false\r\n        }\r\n      });\r\n      setValue('');\r\n      setOpen(false);\r\n      nextId.current += 1;\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        {open && (\r\n          <InsertFormPositioner>\r\n            <InsertForm onSubmit={onSubmit}>\r\n              <Input\r\n                autoFocus\r\n                placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\r\n                onChange={onChange}\r\n                value={value}\r\n              />\r\n            </InsertForm>\r\n          </InsertFormPositioner>\r\n        )}\r\n        <CircleButton onClick={onToggle} open={open}>\r\n          <MdAdd />\r\n        </CircleButton>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default React.memo(TodoCreate);","import React from 'react'\r\nimport './PostWrapper.css'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport PhoneBook from './PhoneBook'\r\nimport TodoTemplate from './todolist/TodoTemplate'\r\nimport TodoHead from './todolist/TodoHead'\r\nimport TodoList from './todolist/TodoList'\r\nimport TodoCreate from './todolist/TodoCreate'\r\nimport { TodoProvider } from './todolist/TodoProvider'\r\nfunction PostWrapper() {\r\n    return (\r\n        <div className=\"PostWrapper mt-3\">\r\n            <Nav variant=\"pills\">\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} Link to=\"/React_todolist\" eventKey=\"link-1\">Home</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} Link to=\"/React_todolist/todolist\" eventKey=\"link-2\">To Do List</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} Link to=\"/React_todolist/phonebook\" eventKey=\"link-3\">Phone Book</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n\r\n            {/* 메인화면 */}\r\n            <Route exact path=\"/React_todolist\">\r\n                <div>\r\n                    <Home></Home>\r\n                </div>\r\n            </Route>\r\n\r\n            {/* 투 두 리스트 */}\r\n            <Route exact path=\"/React_todolist/todolist\">\r\n                <div>\r\n                    <TodoProvider>\r\n                        <TodoTemplate>\r\n                            <TodoHead />\r\n                            <TodoList />\r\n                            <TodoCreate />\r\n                        </TodoTemplate>\r\n                    </TodoProvider>\r\n                </div>\r\n            </Route>\r\n\r\n\r\n            {/* 전화번호부 */}\r\n            <Route exact path=\"/React_todolist/phonebook\">\r\n                <div>\r\n                    <PhoneBook />\r\n                </div>\r\n            </Route>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostWrapper;","import React from 'react'\r\nimport PostWrapper from './PostWrapper';\r\n\r\nfunction PostContainer() {\r\n    return(\r\n        <div>\r\n            <PostWrapper/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PostContainer;","import React, { useState } from 'react';\r\n\r\nfunction InputSample() {\r\n  const [inputs, setInputs] = useState({\r\n    name: '',\r\n    nickname: ''\r\n  });\r\n\r\n  const { name, nickname } = inputs; // 비구조화 할당을 통해 값 추출\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value // name 키를 가진 값을 value 로 설정\r\n    });\r\n  };\r\n\r\n  const onReset = () => {\r\n    setInputs({\r\n      name: '',\r\n      nickname: '',\r\n    })\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <input name=\"name\" placeholder=\"이름\" onChange={onChange} value={name} />\r\n      <input name=\"nickname\" placeholder=\"닉네임\" onChange={onChange} value={nickname}/>\r\n      <button onClick={onReset}>초기화</button>\r\n      <div>\r\n        <b>값: </b>\r\n        {name} ({nickname})\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputSample;","import React from 'react'\nimport TabMenu from './components/TabMenu';\nimport Header from './components/Header'\nimport { createGlobalStyle } from 'styled-components';\nimport PostContainer from './components/PostContainer'\nimport InputSample from './components/InputSample';\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background:#e9ecef;\n  }\n`;\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <PostContainer />\n    </>\n\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}